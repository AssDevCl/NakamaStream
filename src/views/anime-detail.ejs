<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= anime.name %> - NakamaStream</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
        }
        .star {
            font-size: 24px;
            color: #ccc;
            cursor: pointer;
        }
        .star.active {
            color: #ffd700;
        }
        .admin {
            display: inline-block;
            color: red;
            margin-bottom: 1rem;
            padding: 0.25rem 0.5rem;
            border: 1px solid red;
            border-radius: 3px;
            background-color: #ffe6e6;
            font-size: 0.75rem;
        }
        .username {
            display: inline-block;
            color: #155724;
            margin-bottom: 1rem;
            padding: 0.25rem 0.5rem;
            border: 1px solid #155724;
            border-radius: 3px;
            background-color: #d4edda;
            font-size: 0.75rem;
        }
    </style>
</head>
<body class="bg-gray-100">
    <nav class="bg-indigo-600 text-white shadow-md">
        <!-- ... (navigation code remains the same) ... -->
    </nav>

    <div class="container mx-auto px-4 py-8">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-4xl font-bold text-indigo-900"><%= anime.name %></h1>
            <a href="/anime" class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded transition duration-300">
                Volver a Inicio
            </a>
        </div>
        <div class="flex flex-col md:flex-row gap-8 bg-white rounded-lg shadow-lg p-6">
            <div class="md:w-1/3">
                <img src="<%= anime.imageUrl %>" alt="<%= anime.name %>" class="w-full rounded-lg shadow-md">
                
                <div class="mt-4">
                    <button id="favoriteBtn" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded w-full">
                        <span id="favoriteText">Agregar a favoritos</span>
                    </button>
                    <span class="block mt-2 text-center">Favoritos: <span id="favoriteCount">0</span></span>
                </div>

                <div class="mt-4">
                    <button id="saveAnimeBtn" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-full">
                        Guardar para más tarde
                    </button>
                </div>

                <div class="mt-4">
                    <div class="rating flex justify-center">
                        <% for (let i = 1; i <= 5; i++) { %>
                            <span class="star cursor-pointer text-3xl transition-all duration-300 hover:scale-125" data-rating="<%= i %>">☆</span>
                        <% } %>
                    </div>
                    <span class="block mt-2 text-center">
                        Calificación promedio: <span id="averageRating">0.0</span> 
                        (<span id="ratingCount">0</span> votos)
                    </span>
                </div>
            </div>
            <div class="md:w-2/3">
                <p class="text-lg mb-6 text-gray-700"><%= anime.description %></p>

                <h2 class="text-2xl font-semibold mb-4 text-indigo-800">Episodes</h2>
                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 mb-6">
                    <% episodes.forEach((episode, index) => { %>
                        <a href="/anime/<%= anime.slug %>/episode/<%= episode.id %>" 
                           class="bg-indigo-500 hover:bg-indigo-600 text-white font-bold py-2 px-4 rounded transition duration-300 text-center">
                            Episode <%= index + 1 %>
                        </a>
                    <% }) %>
                </div>

                <% if (isAdmin) { %>
                    <div class="mt-8">
                        <a href="/anime/<%= anime.slug %>/upload-episode" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded transition duration-300">
                            Upload New Episode
                        </a>
                    </div>
                <% } %>
            </div>
        </div>

        <!-- Sección de comentarios -->
        <div class="mt-8 bg-white rounded-lg shadow-lg p-6">
            <h3 class="text-2xl font-semibold mb-4 text-indigo-800">Comentarios</h3>
            <form id="commentForm" class="mb-6">
                <textarea id="commentContent" class="w-full p-2 border rounded" rows="3" placeholder="Escribe tu comentario"></textarea>
                <button type="submit" class="mt-2 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
                    Enviar comentario
                </button>
            </form>
            <div id="commentsList">
                <!-- Los comentarios se cargarán aquí dinámicamente -->
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const favoriteBtn = document.getElementById('favoriteBtn');
        const favoriteText = document.getElementById('favoriteText');
        const favoriteCount = document.getElementById('favoriteCount');
        const averageRating = document.getElementById('averageRating');
        const ratingCount = document.getElementById('ratingCount');
        const stars = document.querySelectorAll('.star');
        const saveAnimeBtn = document.getElementById('saveAnimeBtn');

        function updateFavoriteButton(isFavorite) {
            if (isFavorite) {
                favoriteText.textContent = 'Quitar de favoritos';
                favoriteBtn.classList.remove('bg-blue-500', 'hover:bg-blue-700');
                favoriteBtn.classList.add('bg-red-500', 'hover:bg-red-700');
            } else {
                favoriteText.textContent = 'Agregar a favoritos';
                favoriteBtn.classList.remove('bg-red-500', 'hover:bg-red-700');
                favoriteBtn.classList.add('bg-blue-500', 'hover:bg-blue-700');
            }
        }

        function updateSaveButton(isSaved) {
            if (isSaved) {
                saveAnimeBtn.textContent = 'Quitar de guardados';
                saveAnimeBtn.classList.remove('bg-green-500', 'hover:bg-green-700');
                saveAnimeBtn.classList.add('bg-red-500', 'hover:bg-red-700');
            } else {
                saveAnimeBtn.textContent = 'Guardar para más tarde';
                saveAnimeBtn.classList.remove('bg-red-500', 'hover:bg-red-700');
                saveAnimeBtn.classList.add('bg-green-500', 'hover:bg-green-700');
            }
        }

        function updateStars(rating) {
            stars.forEach((star, index) => {
                if (index < rating) {
                    star.textContent = '⭐';
                    star.classList.add('text-yellow-400');
                } else {
                    star.textContent = '☆';
                    star.classList.remove('text-yellow-400');
                }
            });
        }

        function loadAnimeData() {
            fetch(`/anime/<%= anime.slug %>/data`)
                .then(response => response.json())
                .then(data => {
                    favoriteCount.textContent = data.favoriteCount;
                    averageRating.textContent = data.averageRating ? data.averageRating.toFixed(1) : '0.0';
                    ratingCount.textContent = data.ratingCount;
                    updateFavoriteButton(data.isFavorite);
                    updateSaveButton(data.isSaved); // Update save button state
                    if (data.userRating) {
                        updateStars(data.userRating);
                    }
                })
                .catch(error => console.error('Error loading data:', error));
        }

        favoriteBtn.addEventListener('click', () => {
            const action = favoriteText.textContent === 'Agregar a favoritos' ? 'add' : 'remove';
            fetch(`/anime/<%= anime.slug %>/favorite`, { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ animeId: <%= anime.id %>, action: action })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    loadAnimeData();
                    Swal.fire({
                        icon: 'success',
                        title: 'Éxito',
                        text: data.message
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message
                    });
                }
            });
        });

        saveAnimeBtn.addEventListener('click', () => {
            const isSaved = saveAnimeBtn.textContent === 'Guardar para más tarde';
            fetch(`/anime/<%= anime.slug %>/toggle-save`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ animeId: <%= anime.id %> })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    updateSaveButton(isSaved);
                    Swal.fire({
                        icon: 'success',
                        title: isSaved ? 'Guardado' : 'Eliminado',
                        text: isSaved ? 'Anime guardado para ver más tarde' : 'Anime eliminado de guardados'
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message
                    });
                }
            });
        });

        stars.forEach(star => {
            star.addEventListener('click', () => {
                const rating = star.dataset.rating;
                fetch(`/anime/<%= anime.slug %>/rate`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ animeId: <%= anime.id %>, rating })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        updateStars(rating);
                        loadAnimeData();
                        Swal.fire({
                            icon: 'success',
                            title: 'Éxito',
                            text: data.message
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message
                        });
                    }
                });
            });
        });

        document.getElementById('commentForm').addEventListener('submit', (e) => {
            e.preventDefault();
            const content = document.getElementById('commentContent').value.trim();
            if (content === '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Por favor, introduce un comentario válido.'
                });
                return;
            }
            fetch(`/anime/<%= anime.slug %>/comment`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ animeId: <%= anime.id %>, content })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Comentario agregado',
                        showConfirmButton: false,
                        timer: 1400
                    });
                    document.getElementById('commentContent').value = '';
                    loadComments();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message
                    });
                }
            });
        });

        function loadComments() {
            fetch(`/anime/<%= anime.slug %>/comments?animeId=<%= anime.id %>`)
            .then(response => response.json())
            .then(comments => {
                const commentsList = document.getElementById('commentsList');
                commentsList.innerHTML = comments.map(comment => `
                    <div class="mb-4 p-4 bg-gray-100 rounded">
                        <p class="font-bold">${comment.username} 
                            <span class="text-sm font-normal">(${comment.user_rank})</span>
                            ${comment.is_admin ? '<span class="bg-red-500 text-white px-2 py-1 rounded text-xs ml-2">Admin</span>' : ''}
                        </p>
                        <p class="mt-2">${comment.content}</p>
                        <p class="text-sm text-gray-500 mt-2">${new Date(comment.created_at).toLocaleString()}</p>
                    </div>
                `).join('');
            });
        }
        
        loadAnimeData();
        loadComments();
    });

    
    </script>
</body>
</html>
